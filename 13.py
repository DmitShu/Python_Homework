#Високосный или нет
#x = int(input("Введите год:"))
#print(x % 400 == 0) or (( x % 4 == 0) and ( x % 100 != 0))
# N = int(input("Введите число:"))
# print('3' and '7' in str(N))

# Создайте скрипт, который будет в input() принимать строки, их необходимо будет конвертировать в числа, добавьте try-except, чтобы строки могли быть сконвертированы в числа.
#
# В случае удачного выполнения скрипта пусть выведется: «Вы ввели правильное число».
#
# В конце скрипта обязательно должна быть надпись «Выход из программы».
#
# ПРИМЕЧАНИЕ: Для отлова ошибок используйте try-except, а также блоки finally и else.
#
# Примеры входов и выходов:

# try:
#     i = int(input("Ввведите число:"))
# except ValueError as e:
#     print("Вы ввели неправильное число (Ошибка:)",e)
# else:
#     print("Вы ввели неправильное число ",i)
# finally:
#     print("Выход из программы")

#Запишите условие, которое является истинным, когда только одно из чисел А, В и С меньше 45. Иногда проще записать все условия и не пытаться упростить их.
# A = int(input('Ввведите А'))
# B = int(input('Ввведите B'))
# C = int(input('Ввведите C'))
# if ((A < 45) and (B>=45) and (C>=45)) or\
#    ((B < 45) and (A >= 45) and (C >= 45)) or\
#    ((C < 45) and (B >= 45) and (A >= 45)):
#     print("условие выполнено")
# else:
#     print("условие не выполнено")
#Запишите логическое выражение, которое определяет, что число А не принадлежит интервалу от -10 до -1 или интервалу от 2 до 15.
# A = int(input('Ввведите А '))
# if not ((-10 <= A <= -1) or (2 <= A <= 15)):
#     print("не принадлежит")
# else:
#     print("принадлежит")
#Задание 13.5.7
#Дано двузначное число. Определите, входит ли в него цифра 5. Попробуйте решить задачу с использованием целочисленного деления и деления с остатком.
# a = int(input('Ввведите дв ч. '))
# if a // 10 == 5 or a % 10 == 5:
#     print('est 5')
# else:
#     print('net 5')
#Задание 13.5.8
# list = [-5, 2, 4, 8, 8, -7, 5]
# print(list)
# print(set(list))
# print(len(list) == len(set(list)))
# #Задание 13.5.9
# a = int(input('Ввведите 8 зн. число '))
# try:
#     print (str(a) == str(a)[::-1])
# except:
#     print('Ошибка проверь ввод')
S = 0  # заводим переменную-счетчик, в которой мы будем считать сумму
N = 5

# # заводим цикл for, в котором мы будем проходить по всем числам от одного до N
# for i in range(1, N + 1):  # равносильно выражению for i in [1, 2, 3, ... , N -1, N]:
#     print("Значение суммы на предыдущем шаге: ", S)
#     print("Текущее число: ", i)
#     S = S + i  # cуммируем текущее число i и перезаписываем значение суммы
#     print("Значение суммы после сложения: ", S)
#     print("---")
# print("Конец цикла")
# print()
# print("Ответ: сумма равна = ", S)
#13.6.2
# N = int(input('ВВедите: '))
# P = 1
# for i in range(1, N+1):
#     P *= i
# print(P)
#Задание 13.6.3
# N = int(input('ВВедите # * '))
# for i in range(1, N+1):
#     print ('*'*i)
n=1
# while True:
#    if n ** 2 >= 1000:
#        print("Последнее число", n - 1)
#        break
#    n += 1
# random_matrix = [
#     [9, 2, 1],
#     [2, 5, 3],
#     [4, 8, 5]
# ]
#
# mean_value_rows = []  # здесь будут храниться средние значения для каждой строки
# min_value_rows = []  # здесь будут храниться минимальные значения для каждой строки
# min_index_rows = []  # здесь будут храниться индексы минимальных значений для каждой строки
# max_value_rows = []  # здесь будут храниться максимальные значения для каждой строки
# max_index_rows = []  # здесь будут храниться индексы максимальных значений для каждой строки
#
# for row in random_matrix:  # здесь мы целиком берем каждую сроку
#     min_index = 0  # в качестве минимального значения возьмем первый элемент строки
#     max_index = 0
#     min_value = row[min_index]  # начальное минимальное значение для каждой строки будет новое
#     max_value = row[max_index]  # для максимального значения тоже самое
#     for index_col in range(len(row)):
#         if row[index_col] < min_value:
#             min_value = row[index_col]
#             min_index = index_col
#         if row[index_col] > max_value:
#             max_value = row[index_col]
#             max_index = index_col
#     min_value_rows.append(min_value)
#     min_index_rows.append(min_index)
#     max_value_rows.append(max_value)
#     max_index_rows.append(max_index)
#
# print(min_value_rows)
# print(min_index_rows)
# print(max_value_rows)
# print(max_index_rows)

#Начинающий программист написал программу, которая находит индекс последнего отрицательного элемента в списке.

list_ = [-5, 2, 4, 8, 12, -7, 5]
# Объявим переменную, в которой будем хранить индекс отрицательного элемента
ind = 0
for i, v in enumerate(list_):
    if v < 0:
        print("Отрицательное число: ", v)
        print("Новый индекс отрицательного числа: ", i)
        ind = i
    else:
        print("Положительное число: ", v)
    print("---")
print("Конец цикла")
print()
print("Ответ: индекс последнего отрицательного элемента = ", ind)